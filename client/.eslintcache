[{"C:\\Users\\user\\Desktop\\git\\Yapp\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\git\\Yapp\\client\\src\\App.js":"2"},{"size":152,"mtime":1612157756128,"results":"3","hashOfConfig":"4"},{"size":4729,"mtime":1612183282637,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"takq4q",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\user\\Desktop\\git\\Yapp\\client\\src\\index.js",[],["12","13"],"C:\\Users\\user\\Desktop\\git\\Yapp\\client\\src\\App.js",["14"],"import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\n\nlet socket;\nconst CONNECTION_PORT = \"localhost:3000/\";\nvar room_name = \"Room\";\n\n\nconst cd = new Date(); //current date/time\nconst timestamp =  cd.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n\nfunction App() {\n  \n  //before login\n  const [loggedIn, setLoggedIn] = useState(false) //check whether or not you entered a room or not.\n  const [room, setRoom] = useState(\"\") // a value of the room we're in\n  const [userName, setUserName] = useState(\"\") // value of the user name\n\n  \n  //after login\n  const [message, setMessage] = useState(\"\") // our default msg.\n  const [messageList, setMessageList] = useState([{author: \"max\", msg: \"hello, world.\", time: timestamp}]);\n\n  \n  useEffect(() => {//initialize that kind of connection\n    socket = io(CONNECTION_PORT) //initializes the connection\n  }, [CONNECTION_PORT]) //pass connection port so it doesn't loop for inf.\n\n  useEffect(() => {\n  socket.on(\"recieve_message\", (data) =>\n  {\n    setMessageList([...messageList, data]);\n  })});\n\n  const connectToRoom = () => {\n    setLoggedIn(true);\n    socket.emit(\"join_room\", room);\n    room_name = room;\n  };\n\n  const sendMessage = async () => {\n    let messageMD = {\n      room: room,\n      content: {\n        author: userName,\n        msg: message,\n        time: timestamp\n      }\n    }; // message meta data\n\n    await socket.emit(\"send_message\", messageMD);\n    setMessageList([...messageList, messageMD.content]);\n    setMessage(\"\"); \n  }\n  \n  return (\n    <div className=\"App\">\n      {\n        !loggedIn ? //if false\n        ( \n          <div className=\"logIn\">\n            <div class=\"ui inverted segment\">\n              <div class=\"ui inverted form\">\n                <div class=\"two fields\">\n                  <div class=\"field\">\n                    <label>Name</label>\n                      <div class=\"ui left icon input\">\n                        <input \n                            type=\"text\" \n                            placeholder=\"Name...\" \n                            onChange={(e) => \n                            {\n                              setUserName(e.target.value);\n                            }} \n                        />\n                        <i class=\"user icon\" />\n                      </div>\n                  </div>\n\n                  <div class=\"field\">\n                    <label>Room</label>\n                    <div class=\"ui left icon input\" >\n                      <input \n                        type=\"text\" \n                        placeholder=\"Room...\" \n                        onChange={(e) => \n                        {\n                          setRoom(e.target.value);\n                        }} \n                      />\n                      <i class=\"door closed icon\"/>                    \n                    </div>\n                  </div>\n                </div>\n                <div class=\"inline field\">\n                  <div class=\"ui checkbox\">\n                    <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\"/>\n                    <label>I agree to the terms and conditions</label>\n                  </div>\n                </div>\n                <button class=\"ui submit button\" onClick={connectToRoom} >Enter</button>\n              </div>\n            </div>\n            \n          </div>\n        ) : (\n          <div className=\"chatContainer\">\n              <table class=\"ui inverted table\">\n                <thead>\n                  <tr>\n                    <th colSpan=\"3\">{room_name} joined at <span class=\"ui red text\">{timestamp}</span></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                  <td class=\"center aligned\" colSpan=\"3\">\n                    <div className=\"chatMessages\">\n                      {messageList.map((key, val) => {\n                        return(<h2>{key.author} {key.msg} {key.time}</h2>)\n                      })}\n                    </div>\n                  </td>\n                  </tr>\n                  <tr>\n                    <td colSpan=\"2\">\n                    <div class=\"ui input\">\n                        <textarea type=\"text\" \n                        onChange={(e) => \n                        {\n                          setMessage(e.target.value);\n                        }}></textarea>\n                    </div>\n                      </td>\n                    <td class=\"right aligned\"><button class=\"ui inverted green button\" onClick={sendMessage}>send</button></td>\n                  </tr>\n                </tbody>\n              </table>\n          </div>\n            )\n      }\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":28,"column":6,"nodeType":"21","endLine":28,"endColumn":23,"suggestions":"22"},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'CONNECTION_PORT'. Either exclude it or remove the dependency array. Outer scope values like 'CONNECTION_PORT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["25"],"no-global-assign","no-unsafe-negation",{"desc":"26","fix":"27"},"Update the dependencies array to be: []",{"range":"28","text":"29"},[935,952],"[]"]